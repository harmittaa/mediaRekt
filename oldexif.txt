    var handleFile = function () {
        var reader;
        var files = [$scope.newImageblob];
        reader = new FileReader();
        reader.onload = function (event) {
            var exif, tags, tableBody, name, row;
            try {
                exif = new ExifReader();

                // Parse the Exif tags.
                exif.load(event.target.result);
                // Or, with jDataView you would use this:
                //exif.loadView(new jDataView(event.target.result));

                // The MakerNote tag can be really large. Remove it to lower memory usage.
                exif.deleteTag('MakerNote');

                // Output the tags on the page.
                tags = exif.getAllTags();
                $scope.latitude = exif.getTagDescription('GPSLatitude');
                $scope.longitude = exif.getTagDescription('GPSLongitude');

                var mapa = document.createElement("img");
                mapa.id = "locationMap";
                mapa.className = "img-thumbnail";
                var parentElement = document.getElementById("contentRow");
                parentElement.appendChild(mapa);
                console.log(mapa);
                /*$("#locationMap").attr("src", 'https://maps.googleapis.com/maps/api/staticmap?maptype=satellite&center=' + $scope.latitude + ',' + $scope.longitude + '&zoom=14&size=640x400&key=AIzaSyB-MSqFBTkmnzSc2ph2SqiTx1ffuSZAW08');*/

                tableBody = document.getElementById('exif-table-body');
                for (name in tags) {
                    if (tags.hasOwnProperty(name)) {
                        row = document.createElement('tr');
                        row.innerHTML = '<td id="exifDataFromImage">' + name + '</td><td id="exifDataFromImage">' + tags[name].description + '</td>';
                        tableBody.appendChild(row);
                    }
                }
            } catch (error) {
                alert(error);
            }
        };


        // We only need the start of the file for the Exif info.
        reader.readAsArrayBuffer(files[0].slice(0, 128 * 1024));
    };